// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591

namespace SugarRestSharp.Models
{
	using System;
	using Newtonsoft.Json;
	

    /// <summary>
    /// A class which represents the users table.
    /// </summary>
	[ModuleProperty(ModuleName = "Users", TableName="users")]
	public partial class User : EntityBase
	{
		[JsonProperty(PropertyName = "id")]
		public virtual string Id { get; set; }

		[JsonProperty(PropertyName = "user_name")]
		public virtual string UserName { get; set; }

		[JsonProperty(PropertyName = "user_hash")]
		public virtual string UserHash { get; set; }

		[JsonProperty(PropertyName = "system_generated_password")]
		public virtual sbyte? SystemGeneratedPassword { get; set; }

		[JsonProperty(PropertyName = "pwd_last_changed")]
		public virtual DateTime? PwdLastChanged { get; set; }

		[JsonProperty(PropertyName = "authenticate_id")]
		public virtual string AuthenticateId { get; set; }

		[JsonProperty(PropertyName = "sugar_login")]
		public virtual sbyte? SugarLogin { get; set; }

		[JsonProperty(PropertyName = "first_name")]
		public virtual string FirstName { get; set; }

		[JsonProperty(PropertyName = "last_name")]
		public virtual string LastName { get; set; }

		[JsonProperty(PropertyName = "is_admin")]
		public virtual sbyte? IsAdmin { get; set; }

		[JsonProperty(PropertyName = "external_auth_only")]
		public virtual sbyte? ExternalAuthOnly { get; set; }

		[JsonProperty(PropertyName = "receive_notifications")]
		public virtual sbyte? ReceiveNotifications { get; set; }

		[JsonProperty(PropertyName = "description")]
		public virtual string Description { get; set; }

		[JsonProperty(PropertyName = "date_entered")]
		public virtual DateTime? DateEntered { get; set; }

		[JsonProperty(PropertyName = "date_modified")]
		public virtual DateTime? DateModified { get; set; }

		[JsonProperty(PropertyName = "modified_user_id")]
		public virtual string ModifiedUserId { get; set; }

		[JsonProperty(PropertyName = "created_by")]
		public virtual string CreatedBy { get; set; }

		[JsonProperty(PropertyName = "title")]
		public virtual string Title { get; set; }

		[JsonProperty(PropertyName = "department")]
		public virtual string Department { get; set; }

		[JsonProperty(PropertyName = "phone_home")]
		public virtual string PhoneHome { get; set; }

		[JsonProperty(PropertyName = "phone_mobile")]
		public virtual string PhoneMobile { get; set; }

		[JsonProperty(PropertyName = "phone_work")]
		public virtual string PhoneWork { get; set; }

		[JsonProperty(PropertyName = "phone_other")]
		public virtual string PhoneOther { get; set; }

		[JsonProperty(PropertyName = "phone_fax")]
		public virtual string PhoneFax { get; set; }

		[JsonProperty(PropertyName = "status")]
		public virtual string Status { get; set; }

		[JsonProperty(PropertyName = "address_street")]
		public virtual string AddressStreet { get; set; }

		[JsonProperty(PropertyName = "address_city")]
		public virtual string AddressCity { get; set; }

		[JsonProperty(PropertyName = "address_state")]
		public virtual string AddressState { get; set; }

		[JsonProperty(PropertyName = "address_country")]
		public virtual string AddressCountry { get; set; }

		[JsonProperty(PropertyName = "address_postalcode")]
		public virtual string AddressPostalcode { get; set; }

		[JsonProperty(PropertyName = "deleted")]
		public virtual sbyte? Deleted { get; set; }

		[JsonProperty(PropertyName = "portal_only")]
		public virtual sbyte? PortalOnly { get; set; }

		[JsonProperty(PropertyName = "show_on_employees")]
		public virtual sbyte? ShowOnEmployees { get; set; }

		[JsonProperty(PropertyName = "employee_status")]
		public virtual string EmployeeStatus { get; set; }

		[JsonProperty(PropertyName = "messenger_id")]
		public virtual string MessengerId { get; set; }

		[JsonProperty(PropertyName = "messenger_type")]
		public virtual string MessengerType { get; set; }

		[JsonProperty(PropertyName = "reports_to_id")]
		public virtual string ReportsToId { get; set; }

		[JsonProperty(PropertyName = "is_group")]
		public virtual sbyte? IsGroup { get; set; }

	}
}