// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591

namespace SugarRestSharp.Models
{
	using System;
	using Newtonsoft.Json;
	

    /// <summary>
    /// A class which represents the fields_meta_data table.
    /// </summary>
	[ModuleProperty(ModuleName = "FieldsMetaData", TableName="fields_meta_data")]
	public partial class FieldsMetaData : EntityBase
	{
		[JsonProperty(PropertyName = "id")]
		public virtual string Id { get; set; }

		[JsonProperty(PropertyName = "name")]
		public virtual string Name { get; set; }

		[JsonProperty(PropertyName = "vname")]
		public virtual string Vname { get; set; }

		[JsonProperty(PropertyName = "comments")]
		public virtual string Comments { get; set; }

		[JsonProperty(PropertyName = "help")]
		public virtual string Help { get; set; }

		[JsonProperty(PropertyName = "custom_module")]
		public virtual string CustomModule { get; set; }

		[JsonProperty(PropertyName = "type")]
		public virtual string Type { get; set; }

		[JsonProperty(PropertyName = "len")]
		public virtual int? Len { get; set; }

		[JsonProperty(PropertyName = "required")]
		public virtual sbyte? Required { get; set; }

		[JsonProperty(PropertyName = "default_value")]
		public virtual string DefaultValue { get; set; }

		[JsonProperty(PropertyName = "date_modified")]
		public virtual DateTime? DateModified { get; set; }

		[JsonProperty(PropertyName = "deleted")]
		public virtual sbyte? Deleted { get; set; }

		[JsonProperty(PropertyName = "audited")]
		public virtual sbyte? Audited { get; set; }

		[JsonProperty(PropertyName = "massupdate")]
		public virtual sbyte? Massupdate { get; set; }

		[JsonProperty(PropertyName = "duplicate_merge")]
		public virtual short? DuplicateMerge { get; set; }

		[JsonProperty(PropertyName = "reportable")]
		public virtual sbyte? Reportable { get; set; }

		[JsonProperty(PropertyName = "importable")]
		public virtual string Importable { get; set; }

		[JsonProperty(PropertyName = "ext1")]
		public virtual string Ext1 { get; set; }

		[JsonProperty(PropertyName = "ext2")]
		public virtual string Ext2 { get; set; }

		[JsonProperty(PropertyName = "ext3")]
		public virtual string Ext3 { get; set; }

		[JsonProperty(PropertyName = "ext4")]
		public virtual string Ext4 { get; set; }

	}
}