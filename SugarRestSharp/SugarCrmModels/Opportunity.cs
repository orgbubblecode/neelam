// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591

namespace SugarRestSharp.Models
{
	using System;
	using Newtonsoft.Json;
	

    /// <summary>
    /// A class which represents the opportunities table.
    /// </summary>
	[ModuleProperty(ModuleName = "Opportunities", TableName="opportunities")]
	public partial class Opportunity : EntityBase
	{
		[JsonProperty(PropertyName = "id")]
		public virtual string Id { get; set; }

		[JsonProperty(PropertyName = "name")]
		public virtual string Name { get; set; }

		[JsonProperty(PropertyName = "date_entered")]
		public virtual DateTime? DateEntered { get; set; }

		[JsonProperty(PropertyName = "date_modified")]
		public virtual DateTime? DateModified { get; set; }

		[JsonProperty(PropertyName = "modified_user_id")]
		public virtual string ModifiedUserId { get; set; }

		[JsonProperty(PropertyName = "created_by")]
		public virtual string CreatedBy { get; set; }

		[JsonProperty(PropertyName = "description")]
		public virtual string Description { get; set; }

		[JsonProperty(PropertyName = "deleted")]
		public virtual sbyte? Deleted { get; set; }

		[JsonProperty(PropertyName = "assigned_user_id")]
		public virtual string AssignedUserId { get; set; }

		[JsonProperty(PropertyName = "opportunity_type")]
		public virtual string OpportunityType { get; set; }

		[JsonProperty(PropertyName = "campaign_id")]
		public virtual string CampaignId { get; set; }

		[JsonProperty(PropertyName = "lead_source")]
		public virtual string LeadSource { get; set; }

		[JsonProperty(PropertyName = "amount")]
		public virtual double? Amount { get; set; }

		[JsonProperty(PropertyName = "amount_usdollar")]
		public virtual double? AmountUsdollar { get; set; }

		[JsonProperty(PropertyName = "currency_id")]
		public virtual string CurrencyId { get; set; }

		[JsonProperty(PropertyName = "date_closed")]
		public virtual DateTime? DateClosed { get; set; }

		[JsonProperty(PropertyName = "next_step")]
		public virtual string NextStep { get; set; }

		[JsonProperty(PropertyName = "sales_stage")]
		public virtual string SalesStage { get; set; }

		[JsonProperty(PropertyName = "probability")]
		public virtual double? Probability { get; set; }

	}
}